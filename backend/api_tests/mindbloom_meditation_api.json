{
  "info": {
    "_postman_id": "a6c4b2d0-d9c8-4a7e-b13c-12e0f5d8920f",
    "name": "Mindbloom Meditation API",
    "description": "Collection for testing the Mindbloom meditation streak and achievement tracking APIs",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Authentication",
      "description": "Endpoints for authentication - required before accessing meditation endpoints",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test User\",\n  \"username\": \"testuser\",\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"1234567890\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "register"
              ]
            },
            "description": "Create a new user account."
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "var jsonData = pm.response.json();",
                  "if (jsonData && jsonData.data && jsonData.data.token) {",
                  "    pm.environment.set(\"authToken\", jsonData.data.token);",
                  "    pm.environment.set(\"userId\", jsonData.data.user.id);",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "auth",
                "login"
              ]
            },
            "description": "Login to get authentication token. This request includes a script to automatically save the token to environment variables."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Meditation Sessions",
      "description": "Endpoints for recording and retrieving meditation sessions",
      "item": [
        {
          "name": "Record Meditation Session",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"duration\": 15,\n  \"meditationType\": \"mindfulness\",\n  \"notes\": \"Felt very calm today\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/meditation/session",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "meditation",
                "session"
              ]
            },
            "description": "Record a new meditation session. Duration is in minutes."
          },
          "response": []
        },
        {
          "name": "Get Meditation History",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/meditation/history?page=1&limit=10",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "meditation",
                "history"
              ],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            },
            "description": "Get user's meditation history with pagination."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Streak Management",
      "description": "Endpoints for retrieving streak information",
      "item": [
        {
          "name": "Get Current Streak",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/meditation/streak",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "meditation",
                "streak"
              ]
            },
            "description": "Get user's current streak information."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Achievements",
      "description": "Endpoints for retrieving user achievements",
      "item": [
        {
          "name": "Get All Achievements",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/meditation/achievements",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "meditation",
                "achievements"
              ]
            },
            "description": "Get all user achievements with completion status."
          },
          "response": []
        },
        {
          "name": "Get Dashboard Data",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{authToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/meditation/dashboard",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "meditation",
                "dashboard"
              ]
            },
            "description": "Get user's meditation dashboard data including highlighted achievements and stats."
          },
          "response": []
        }
      ]
    },
    {
      "name": "Test Scenarios",
      "description": "Predefined scenario tests",
      "item": [
        {
          "name": "Scenario: Complete First Meditation",
          "item": [
            {
              "name": "1. Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (jsonData && jsonData.data && jsonData.data.token) {",
                      "    pm.environment.set(\"authToken\", jsonData.data.token);",
                      "    pm.environment.set(\"userId\", jsonData.data.user.id);",
                      "}",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Login successful\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.token).to.exist;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "login"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "2. Check Initial Streak",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Initial streak should be 0\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.streak).to.eql(0);",
                      "    pm.expect(jsonData.data.todayCompleted).to.eql(false);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/meditation/streak",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "meditation",
                    "streak"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "3. Record First Meditation",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"First meditation recorded successfully\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.streak).to.eql(1);",
                      "    pm.expect(jsonData.data.todayCompleted).to.eql(true);",
                      "    pm.expect(jsonData.data.session).to.exist;",
                      "});",
                      "",
                      "pm.test(\"First achievement unlocked\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.data.newAchievements).to.exist;",
                      "    pm.expect(jsonData.data.newAchievements.length).to.be.at.least(1);",
                      "    ",
                      "    // Check for 'First Step' achievement",
                      "    const firstStepAchievement = jsonData.data.newAchievements.find(a => a.name === 'First Step');",
                      "    pm.expect(firstStepAchievement).to.exist;",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"duration\": 10,\n  \"meditationType\": \"mindfulness\",\n  \"notes\": \"First meditation session!\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/meditation/session",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "meditation",
                    "session"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "4. Check Dashboard After First Meditation",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"Dashboard shows updated streak and session\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.streakCount).to.eql(1);",
                      "    pm.expect(jsonData.data.totalMinutes).to.eql(10);",
                      "    pm.expect(jsonData.data.stats.totalSessions).to.eql(1);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/meditation/dashboard",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "meditation",
                    "dashboard"
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Tests the flow of completing a first meditation session."
        },
        {
          "name": "Scenario: Multiple Sessions in One Day",
          "item": [
            {
              "name": "1. Login",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "var jsonData = pm.response.json();",
                      "if (jsonData && jsonData.data && jsonData.data.token) {",
                      "    pm.environment.set(\"authToken\", jsonData.data.token);",
                      "    pm.environment.set(\"userId\", jsonData.data.user.id);",
                      "}",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"test@example.com\",\n  \"password\": \"password123\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/auth/login",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "auth",
                    "login"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "2. Record First Session of Day",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "// Store the current streak and total minutes for later comparison",
                      "var jsonData = pm.response.json();",
                      "pm.environment.set(\"currentStreak\", jsonData.data.streak);",
                      "pm.environment.set(\"currentTotalMinutes\", jsonData.data.totalMinutes);",
                      "",
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"duration\": 15,\n  \"meditationType\": \"focus\",\n  \"notes\": \"Morning session\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/meditation/session",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "meditation",
                    "session"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "3. Record Second Session of Day",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 201\", function () {",
                      "    pm.response.to.have.status(201);",
                      "});",
                      "",
                      "pm.test(\"Streak remains the same after multiple sessions in same day\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var previousStreak = pm.environment.get(\"currentStreak\");",
                      "    ",
                      "    pm.expect(jsonData.data.streak).to.eql(parseInt(previousStreak));",
                      "});",
                      "",
                      "pm.test(\"Total minutes accumulate correctly\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    var previousTotal = parseInt(pm.environment.get(\"currentTotalMinutes\"));",
                      "    ",
                      "    pm.expect(jsonData.data.totalMinutes).to.eql(previousTotal + 20);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  },
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"duration\": 20,\n  \"meditationType\": \"relaxation\",\n  \"notes\": \"Evening session\"\n}"
                },
                "url": {
                  "raw": "{{baseUrl}}/api/meditation/session",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "meditation",
                    "session"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "4. Check Meditation History",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "pm.test(\"History shows all meditation sessions\", function () {",
                      "    var jsonData = pm.response.json();",
                      "    pm.expect(jsonData.success).to.eql(true);",
                      "    pm.expect(jsonData.data.sessions.length).to.be.at.least(2);",
                      "});"
                    ],
                    "type": "text/javascript"
                  }
                }
              ],
              "request": {
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{authToken}}"
                  }
                ],
                "url": {
                  "raw": "{{baseUrl}}/api/meditation/history",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "meditation",
                    "history"
                  ]
                }
              },
              "response": []
            }
          ],
          "description": "Tests how the system handles multiple meditation sessions in the same day."
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000",
      "type": "string"
    }
  ]
}